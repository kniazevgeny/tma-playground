import{defaultTransformer as i,isPlainObject as h,isRedirect as m,isNotFound as g}from"@tanstack/react-router";import v from"tiny-invariant";import{H3Event as f,getRequestURL as C,getResponseStatus as E,getRequestWebStream as q,eventHandler as A}from"h3";import{getContext as F}from"unctx";import{AsyncLocalStorage as N}from"node:async_hooks";function L(e){let o;const t=b(e),s={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(t,{...s,body:e.node.req.body}):new Request(t,{...s,get body(){return o||(o=j(e),o)}})}function H(e){return e.web??={request:L(e),url:b(e)},e.web.request}function P(){return T()}const w=Symbol("$HTTPEvent");function O(e){return typeof e=="object"&&(e instanceof f||e?.[w]instanceof f||e?.__is_event__===!0)}function l(e){return function(...o){let t=o[0];if(O(t))o[0]=t instanceof f||t.__is_event__?t:t[w];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(t=P(),!t)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");o.unshift(t)}return e(...o)}}const b=l(C),W=l(E),j=l(q);function I(){return F("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:N})}function T(){return I().use().event}function U(e){return globalThis.MANIFEST[e]}const z=A($);async function $(e){return J(H(e))}async function J(e,o){var t,s;const p=e.method,S=new URL(e.url,"http://localhost:3000"),a=Object.fromEntries(S.searchParams.entries()),u=a._serverFnId,d=a._serverFnName;if(!u||!d)throw new Error("Invalid request");v(typeof u=="string","Invalid server action");const x=(s=await((t=U("server").chunks[u])==null?void 0:t.import()))==null?void 0:s[d],c=await(async()=>{try{const n=await(async()=>{var y;if((y=e.headers.get("Content-Type"))!=null&&y.includes("multipart/form-data"))return v(p.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await e.formData();if(p.toLowerCase()==="get")return a.payload?i.parse(a.payload):void 0;const _=await e.text();return i.parse(_)})(),r=await x(n);return r instanceof Response?r:h(r)&&"result"in r&&r.result instanceof Response?r.result:m(r)||g(r)?R(r):new Response(r!==void 0?i.stringify(r):void 0,{status:W(T()),headers:{"Content-Type":"application/json"}})}catch(n){return n instanceof Response?n:h(n)&&"result"in n&&n.result instanceof Response?n.result:m(n)||g(n)?R(n):(console.error("Server Fn Error!"),console.error(n),console.info(),new Response(i.stringify(n),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(c.headers.get("Content-Type")==="application/json"){const r=await c.clone().text();r&&JSON.stringify(JSON.parse(r))}return c}function R(e){const{headers:o,...t}=e;return new Response(JSON.stringify(t),{status:200,headers:{"Content-Type":"application/json",...o||{}}})}export{z as default};
